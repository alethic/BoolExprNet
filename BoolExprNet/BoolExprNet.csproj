<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>net5.0;netcoreapp3.0;netcoreapp2.0;net46</TargetFrameworks>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Description>BoolExprNet is a .NET wrapper around the Boolexpr open source C++ library for symbolic Boolean algebra.</Description>
    </PropertyGroup>

    <ItemGroup>
        <LibProjectReference Include="boolexpr-win-x86">
            <CMakePath>..\boolexpr32</CMakePath>
            <ProjectFile>..\boolexpr32\boolexpr32.vcxproj</ProjectFile>
            <Platform>Win32</Platform>
            <Configuration>$(Configuration)</Configuration>
            <OutputDir>runtimes\win-x86\native</OutputDir>
        </LibProjectReference>
        <LibProjectReference Include="boolexpr-win-x64">
            <CMakePath>..\boolexpr64</CMakePath>
            <ProjectFile>..\boolexpr64\boolexpr64.vcxproj</ProjectFile>
            <Platform>x64</Platform>
            <Configuration>$(Configuration)</Configuration>
            <OutputDir>runtimes\win-x64\native</OutputDir>
        </LibProjectReference>
        <LibProjectReference Include="boolexpr-linux-x86">
            <ProjectFile>..\libboolexpr\libboolexpr.vcxproj</ProjectFile>
            <Platform>x86</Platform>
            <Configuration>$(Configuration)</Configuration>
            <OutputDir>runtimes\linux-x86\native</OutputDir>
        </LibProjectReference>
        <LibProjectReference Include=".boolexpr-linux-x64">
            <ProjectFile>..\libboolexpr\libboolexpr.vcxproj</ProjectFile>
            <Platform>x64</Platform>
            <Configuration>$(Configuration)</Configuration>
            <OutputDir>runtimes\linux-x64\native</OutputDir>
        </LibProjectReference>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="System.ValueTuple" Version="4.5.0" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp3.0'">
        <PackageReference Include="System.Runtime.Loader">
            <Version>4.3.0</Version>
        </PackageReference>
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.0'">
        <PackageReference Include="System.Runtime.Loader">
            <Version>4.3.0</Version>
        </PackageReference>
    </ItemGroup>

    <Target Name="GenLibProject" BeforeTargets="Build" Inputs="@(LibProjectReference->'%(CMakePath)\CMakeLists.txt')" Outputs="%(LibProjectReference.ProjectFile)">
        <Exec Command="&quot;$(DevEnvDir)CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe&quot; -S %(LibProjectReference.CMakePath) -B %(LibProjectReference.CMakePath) -G &quot;Visual Studio 16 2019&quot; -A %(LibProjectReference.Platform)" Condition=" '%(LibProjectReference.CMakePath)' != '' " />
    </Target>

    <Target Name="GetLibProjectReferences" DependsOnTargets="GenLibProject">
        <MSBuild Projects="@(LibProjectReference->'%(ProjectFile)')" Targets="GetTargetPath" Properties="Platform=%(LibProjectReference.Platform);Configuration=%(LibProjectReference.Configuration)">
            <Output TaskParameter="TargetOutputs" ItemName="_LibProjectReferenceWithOutputPath" />
        </MSBuild>
        <ItemGroup>
            <LibProjectReferenceWithOutputPath Include="@(_LibProjectReferenceWithOutputPath)">
                <OutputPath>%(Identity)</OutputPath>
            </LibProjectReferenceWithOutputPath>
        </ItemGroup>
    </Target>

    <Target Name="GetItemsForLibProjectReferences" BeforeTargets="Build;AssignTargetPaths" DependsOnTargets="GetLibProjectReferences" Condition="'$(DesignTimeBuild)' != 'true'">
        <ItemGroup>
            <None Include="@(LibProjectReferenceWithOutputPath->'%(OutputPath)')">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
                <Link>%(LibProjectReferenceWithOutputPath.OutputDir)\%(LibProjectReferenceWithOutputPath.Filename)%(LibProjectReferenceWithOutputPath.Extension)</Link>
                <Pack>true</Pack>
                <PackagePath>%(LibProjectReferenceWithOutputPath.OutputDir)</PackagePath>
                <PackageCopyToOutput>true</PackageCopyToOutput>
            </None>
        </ItemGroup>
    </Target>

    <Target Name="BuildLibProjectReferences" BeforeTargets="Compile" DependsOnTargets="GetLibProjectReferences" Condition="'$(DesignTimeBuild)' != 'true'">
        <MSBuild Projects="%(LibProjectReferenceWithOutputPath.ProjectFile)" Targets="Build" Properties="Platform=%(LibProjectReferenceWithOutputPath.Platform);Configuration=%(LibProjectReferenceWithOutputPath.Configuration)">
            <Output TaskParameter="TargetOutputs" ItemName="LibProjectReferencesCompileOutput" />
        </MSBuild>
    </Target>

</Project>
