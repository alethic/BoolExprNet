<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>netcoreapp2.0;net46</TargetFrameworks>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>

    <ItemGroup>
        <LibProjectReference Include="..\boolexpr32">
            <Name>boolexpr32</Name>
            <Platform>Win32</Platform>
            <Configuration>$(Configuration)</Configuration>
            <OutputDir>runtimes/win7-x86/native</OutputDir>
        </LibProjectReference>
        <LibProjectReference Include="..\boolexpr64">
            <Name>boolexpr64</Name>
            <Platform>x64</Platform>
            <Configuration>$(Configuration)</Configuration>
            <OutputDir>runtimes/win7-x64/native</OutputDir>
        </LibProjectReference>
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="System.ValueTuple" Version="4.5.0" />
    </ItemGroup>
    
    <Target Name="GenLibProject" BeforeTargets="Build" Inputs="@(LibProjectReference->'%(Identity)\CMakeLists.txt')" Outputs="%(LibProjectReference.Identity)\%(LibProjectReference.Name).vcxproj">
        <Exec WorkingDirectory="@(LibProjectReference)" Command="&quot;$(DevEnvDir)CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe&quot; -G &quot;Visual Studio 16 2019&quot; -A %(LibProjectReference.Platform) ." />
    </Target>

    <Target Name="GetLibContent" BeforeTargets="GetCopyToOutputDirectoryItems" DependsOnTargets="GenLibProject" Condition="'$(DesignTimeBuild)' != 'true'">
        <MSBuild Projects="@(LibProjectReference->'%(Identity)\%(Name).vcxproj')" Targets="GetTargetPath" Properties="Platform=%(LibProjectReference.Platform);Configuration=%(LibProjectReference.Configuration)">
            <Output TaskParameter="TargetOutputs" ItemName="LibTargets" />
        </MSBuild>
        <ItemGroup>
            <ContentWithTargetPath Include="@(LibTargets)">
                <CopyToOutputDirectory>Always</CopyToOutputDirectory>
                <TargetPath>%(OutputDir)\%(Filename)%(Extension)</TargetPath>
            </ContentWithTargetPath>
            <ContentWithTargetPath Include="@(LibTargets->'%(Rootdir)%(Directory)%(Filename).pdb')">
                <CopyToOutputDirectory>Always</CopyToOutputDirectory>
                <TargetPath>%(OutputDir)\%(Filename).pdb</TargetPath>
            </ContentWithTargetPath>
        </ItemGroup>
    </Target>

    <Target Name="BuildLib" BeforeTargets="Compile" DependsOnTargets="GetLibContent" Inputs="@(LibProjectReference-&gt;'%(Identity)\%(Name).vcxproj" Outputs="@(LibProjectReference->'%(Identity)\%(Configuration)\%(Name).dll')" Condition="'$(DesignTimeBuild)' != 'true'">
        <Message Text="BuildLib: %(LibProjectReference.Name)" Importance="high" />
        <MSBuild Projects="@(LibProjectReference->'%(Identity)\%(Name).vcxproj')" Targets="Build" Properties="Platform=%(LibProjectReference.Platform);Configuration=%(LibProjectReference.Configuration)">
            <Output TaskParameter="TargetOutputs" ItemName="LibOutputs" />
        </MSBuild>
    </Target>

    <Target Name="__GetPackageFiles" AfterTargets="_GetPackageFiles" DependsOnTargets="GetLibTargets">
        <ItemGroup>
            <_PackageFiles Include="@(LibTargets)">
                <BuildAction>None</BuildAction>
                <Pack>true</Pack>
                <PackagePath>%(OutputDir)\%(Filename)%(Extension)</PackagePath>
            </_PackageFiles>
            <_PackageFiles Include="@(LibTargets->'%(Rootdir)%(Directory)%(Filename).pdb')">
                <BuildAction>None</BuildAction>
                <Pack>true</Pack>
                <PackagePath>%(OutputDir)\%(Filename).pdb</PackagePath>
            </_PackageFiles>
        </ItemGroup>
    </Target>

</Project>
